DATA SEGMENT
DATA ENDS

CODE SEGMENT
    ASSUME CS:CODE,DS:DATA
START:
    CALL INIT_PORTS
    CALL WAIT_SWITCH_ON
    CALL PROCESS_SWITCHES
    CALL DISPLAY_PATTERN
    JMP START

INIT_PORTS PROC
    MOV AX, DATA
    MOV DS, AX
    
    MOV DX, 283H
    MOV AL, 98H
    OUT DX, AL
    
    MOV DX, 281H
    MOV AL, 00H
    OUT DX, AL
    RET
INIT_PORTS ENDP

WAIT_SWITCH_ON PROC
WAIT_SWITCH_LOOP:
    MOV DX, 280H
    IN AL, DX
    AND AL, 11111111B
    JZ WAIT_SWITCH_LOOP
    RET
WAIT_SWITCH_ON ENDP

PROCESS_SWITCHES PROC
    MOV CX, 08H
    MOV BL, 01H
PROCESS_SWITCHES_LOOP:
    MOV DL, AL
    AND DL, BL
    JNZ PROCESS_SWITCHES_FOUND
    SHL BL, 1H
    LOOP PROCESS_SWITCHES_LOOP
    JMP PROCESS_SWITCHES_LOOP
    
PROCESS_SWITCHES_FOUND:
    MOV AL, DL
    RET
PROCESS_SWITCHES ENDP

DISPLAY_PATTERN PROC
DISPLAY_LOOP:
    MOV DX, 281H
    OUT DX, AL
    CALL DELAY
    ROR AL, 1H
    JMP DISPLAY_LOOP
DISPLAY_PATTERN ENDP

DELAY PROC
    PUSH CX
    PUSH BX
    MOV BX, 0FFFFH
DELAY_OUTER_LOOP:
    MOV CX, 0FH
DELAY_INNER_LOOP:
    DEC CX
    JNZ DELAY_INNER_LOOP
    DEC BX
    JNZ DELAY_OUTER_LOOP
    POP BX
    POP CX
    RET
DELAY ENDP

CODE ENDS
END START
